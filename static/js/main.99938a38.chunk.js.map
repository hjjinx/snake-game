{"version":3,"sources":["Box.js","Grid.js","Main.js","serviceWorker.js","index.js"],"names":["Box","classes","this","props","react_default","a","createElement","className","id","Component","Grid","totalWidth","cols","BoxArr","i","rows","push","j","key","value","GridArr","src_Box","style","width","arrayClone","arr","JSON","parse","stringify","Main","_this","Object","classCallCheck","_super","call","newGame","clearInterval","intervalId","setState","headY","headX","newArr","Array","fill","map","history","length","dir","foodEaten","spawnFood","play","playing","state","foodArr","food","split","gridClone","newPos","newHistory","XY","console","log","foodX","Math","floor","random","foodY","setInterval","pause","_this2","window","addEventListener","e","keyCode","onClick","src_Grid","Boolean","location","hostname","match","ReactDOM","render","src_Main","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.99938a38.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Box extends Component {\r\n  render() {\r\n    const classes = this.props.classes;\r\n    return <div className={classes} id={this.props.id} />;\r\n  }\r\n}\r\n\r\nexport default Box;\r\n","import React, { Component } from \"react\";\r\nimport Box from \"./Box\";\r\n\r\nclass Grid extends Component {\r\n  render() {\r\n    const totalWidth = this.props.cols * 40;\r\n    var BoxArr = [];\r\n    for (let i = 0; i < this.props.rows; i++) {\r\n      BoxArr.push([]);\r\n      for (let j = 0; j < this.props.cols; j++) {\r\n        let key = i + \" \" + j;\r\n        let value = this.props.GridArr[i][j];\r\n        let classes = \"box\";\r\n        if (value === \"SH\") classes += \" snake head\";\r\n        // Value can be null, snake head, snake body, or food\r\n        else if (value === \"S\") classes += \" snake\";\r\n        else if (value === \"F\") classes += \" food\";\r\n        BoxArr[i].push(<Box key={key} classes={classes} id={key} />);\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"grid\" style={{ width: totalWidth }}>\r\n        {BoxArr}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Grid;\r\n","import React, { Component } from \"react\";\r\nimport Grid from \"./Grid\";\r\n\r\nclass Main extends Component {\r\n  constructor() {\r\n    super();\r\n    this.rows = 17;\r\n    this.cols = 17;\r\n    this.state = {\r\n      GridArr: Array(this.rows)\r\n        .fill()\r\n        .map(() => Array(this.cols).fill(\"\")),\r\n      dir: \"L\",\r\n      length: 3,\r\n      headX: 8,\r\n      headY: 8,\r\n      history: [\"8_8\", \"8_9\", \"8_10\"],\r\n      food: \"\",\r\n      foodEaten: false\r\n    };\r\n  }\r\n\r\n  newGame = () => {\r\n    clearInterval(this.intervalId);\r\n    this.setState({ headY: 8, headX: 8 });\r\n    let newArr = Array(this.rows)\r\n      .fill()\r\n      .map(() => Array(this.cols).fill(\"\"));\r\n    newArr[8][8] = \"SH\";\r\n    newArr[8][8 + 1] = \"S\";\r\n    newArr[8][8 + 2] = \"S\";\r\n    this.setState({\r\n      GridArr: newArr,\r\n      history: [\"8_8\", \"8_9\", \"8_10\"],\r\n      length: 3,\r\n      dir: \"L\",\r\n      headX: 8,\r\n      headY: 8,\r\n      foodEaten: false\r\n    });\r\n    this.spawnFood(newArr);\r\n    this.play();\r\n  };\r\n\r\n  playing = () => {\r\n    const dir = this.state.dir;\r\n    const headX = this.state.headX;\r\n    const headY = this.state.headY;\r\n    let newArr = Array(this.rows)\r\n      .fill()\r\n      .map(() => Array(this.cols).fill(\"\"));\r\n    const foodArr = this.state.food.split(\"_\");\r\n    newArr[foodArr[0]][foodArr[1]] = \"F\";\r\n    let gridClone = arrayClone(this.state.GridArr);\r\n    var history = arrayClone(this.state.history);\r\n    if (dir === \"L\") {\r\n      if (gridClone[headX][headY - 1] === \"F\") {\r\n        this.setState({ length: this.state.length + 1, foodEaten: true });\r\n      }\r\n      if (headY === 0) {\r\n        newArr[headX][this.cols - 1] = \"SH\";\r\n        var newPos =\r\n          JSON.stringify(headX) + \"_\" + JSON.stringify(this.cols - 1);\r\n        this.setState({ headY: this.cols - 1 });\r\n      } else if (gridClone[headX][headY - 1] === \"S\") {\r\n        this.newGame();\r\n        return 0;\r\n      } else {\r\n        newArr[headX][headY - 1] = \"SH\";\r\n        var newPos = JSON.stringify(headX) + \"_\" + JSON.stringify(headY - 1);\r\n        this.setState({ headY: headY - 1 });\r\n      }\r\n    } else if (dir === \"U\") {\r\n      if (headX === 0) {\r\n        newArr[this.rows - 1][headY] = \"SH\";\r\n        var newPos =\r\n          JSON.stringify(this.rows - 1) + \"_\" + JSON.stringify(headY);\r\n        this.setState({ headX: this.rows - 1 });\r\n      } else if (gridClone[headX - 1][headY] === \"S\") {\r\n        this.newGame();\r\n        return 0;\r\n      } else {\r\n        newArr[headX - 1][headY] = \"SH\";\r\n        var newPos = JSON.stringify(headX - 1) + \"_\" + JSON.stringify(headY);\r\n        this.setState({ headX: headX - 1 });\r\n      }\r\n      if (headX > 0)\r\n        if (gridClone[headX - 1][headY] === \"F\") {\r\n          this.setState({ length: this.state.length + 1, foodEaten: true });\r\n        }\r\n    } else if (dir === \"R\") {\r\n      if (gridClone[headX][headY + 1] === \"F\") {\r\n        this.setState({ length: this.state.length + 1, foodEaten: true });\r\n      }\r\n      if (headY === this.cols - 1) {\r\n        newArr[headX][0] = \"SH\";\r\n        var newPos = JSON.stringify(headX) + \"_\" + JSON.stringify(0);\r\n        this.setState({ headY: 0 });\r\n      } else if (gridClone[headX][headY + 1] === \"S\") {\r\n        this.newGame();\r\n        return 0;\r\n      } else {\r\n        newArr[headX][headY + 1] = \"SH\";\r\n        var newPos = JSON.stringify(headX) + \"_\" + JSON.stringify(headY + 1);\r\n        this.setState({ headY: headY + 1 });\r\n      }\r\n    } else if (dir === \"D\") {\r\n      if (headX === this.rows - 1) {\r\n        newArr[0][headY] = \"SH\";\r\n        var newPos = JSON.stringify(0) + \"_\" + JSON.stringify(headY);\r\n        this.setState({ headX: 0 });\r\n      } else if (gridClone[headX + 1][headY] === \"S\") {\r\n        this.newGame();\r\n        return 0;\r\n      } else {\r\n        newArr[headX + 1][headY] = \"SH\";\r\n        var newPos = JSON.stringify(headX + 1) + \"_\" + JSON.stringify(headY);\r\n        this.setState({ headX: headX + 1 });\r\n      }\r\n      if (headX < 16)\r\n        if (gridClone[headX + 1][headY] === \"F\") {\r\n          this.setState({ length: this.state.length + 1, foodEaten: true });\r\n        }\r\n    }\r\n\r\n    var newHistory = [newPos];\r\n\r\n    for (let j = 0; j < history.length - 1; j++) {\r\n      if (j === history.length - 2 && this.state.foodEaten === true) {\r\n        this.spawnFood(gridClone);\r\n        newHistory.push(history[j]);\r\n      }\r\n      newHistory.push(history[j]);\r\n      let XY = newHistory[j + 1].split(\"_\");\r\n      newArr[XY[0]][XY[1]] = \"S\";\r\n    }\r\n    console.log(history);\r\n    console.log(newHistory);\r\n    this.setState({ GridArr: newArr, history: newHistory });\r\n  };\r\n\r\n  spawnFood = arr => {\r\n    var foodX = Math.floor(Math.random() * this.rows);\r\n    var foodY = Math.floor(Math.random() * this.cols);\r\n    let food = JSON.stringify(foodX) + \"_\" + JSON.stringify(foodY);\r\n\r\n    if (arr[foodX][foodY] !== \"\") this.spawnFood(this.state.GridArr);\r\n    else {\r\n      arr[foodX][foodY] = \"F\";\r\n      this.setState({ food: food });\r\n    }\r\n    this.setState({ GridArr: arr, foodEaten: false });\r\n  };\r\n\r\n  play = () => {\r\n    clearInterval(this.intervalId);\r\n    this.intervalId = setInterval(this.playing, 200);\r\n  };\r\n\r\n  pause = () => {\r\n    clearInterval(this.intervalId);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.newGame();\r\n    window.addEventListener(\"keydown\", e => {\r\n      let dir = this.state.dir;\r\n      if (e.keyCode === 37) {\r\n        //37 is left arrow\r\n        if (dir === \"R\") {\r\n        } else this.setState({ dir: \"L\" });\r\n      }\r\n      if (e.keyCode === 38) {\r\n        //38 is up arrow\r\n        if (dir === \"D\") {\r\n        } else this.setState({ dir: \"U\" });\r\n      }\r\n      if (e.keyCode === 39) {\r\n        //39 is right arrow\r\n        if (dir === \"L\") {\r\n        } else this.setState({ dir: \"R\" });\r\n      }\r\n      if (e.keyCode === 40) {\r\n        //40 is down arrow\r\n        if (dir === \"U\") {\r\n        } else this.setState({ dir: \"D\" });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <div className=\"center\">\r\n          <button className=\"btn btn-default\" onClick={this.newGame}>\r\n            New Game\r\n          </button>\r\n          <button className=\"btn btn-default\" onClick={this.play}>\r\n            Play\r\n          </button>\r\n          <button className=\"btn btn-default\" onClick={this.pause}>\r\n            Pause\r\n          </button>\r\n        </div>\r\n        <Grid rows={this.rows} cols={this.cols} GridArr={this.state.GridArr} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction arrayClone(arr) {\r\n  // For a deep clone\r\n  return JSON.parse(JSON.stringify(arr));\r\n}\r\nexport default Main;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Main from \"./Main\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<Main />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}